/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode fast = head ;
        ListNode slow = head ;
        for(int i = 1 ; i <= n ; i++){
            fast = fast.next ;
        }
        if(head.next == null){
            return null ;
        }
       
        
        while( fast!= null ){
            if(slow.next.next == null ){
                slow.next = null ;
            
                return head;
            }
          else{fast = fast.next;
            slow = slow.next ;}  
            
        }
        slow.val = slow.next.val ;
        slow.next = slow.next.next ;
         
        
        return head ;
    }
}
