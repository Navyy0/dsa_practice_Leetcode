class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {

        List<Integer> arr = new ArrayList<>();

        if (root == null)
            return arr;

        Stack<TreeNode> st = new Stack<>();
        st.push(root);

        while (!st.isEmpty()) {
            TreeNode temp = st.pop();
            arr.add(temp.val); // Add the current node's value

            // Push the right child first so the left child is processed first
            if (temp.right != null) {
                st.push(temp.right);
            }
            if (temp.left != null) {
                st.push(temp.left);
            }
        }
        return arr;
    }
}
